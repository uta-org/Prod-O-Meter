using System;
using System.Collections.Generic;
using System.Linq;

namespace Prod_O_Meter
{
    public enum Languages
    {
        ABAP,
        ActionScript,
        Ada,
        ADSO_IDSM,
        AMPLE,
        Ant,
        Apex_Trigger,
        Arduino_Sketch,
        ASP,
        ASP_Net,
        Assembly,
        AutoHotkey,
        awk,
        Bourne_Again_Shell,
        Bourne_Shell,
        C,
        C_Shell,
        C_,
        C__,
        C_C___Header,
        CCS,
        Clojure,
        ClojureScript,
        CMake,
        COBOL,
        CoffeeScript,
        ColdFusion,
        ColdFusion_CFScript,
        CSS,
        CUDA,
        Cython,
        D_dtrace,
        DAL,
        Dart,
        diff,
        DITA,
        DOS_Batch,
        DTD,
        ECPP,
        Elixir,
        ERB,
        Erlang,
        Expect,
        F_,
        Focus,
        Fortran_77,
        Fortran_90,
        Fortran_95,
        Go,
        Grails,
        Groovy,
        Haml,
        Handlebars,
        Harbour,
        Haskell,
        HLSL,
        HTML,
        IDL,
        IDL_Qt_Project_Prolog,
        InstallShield,
        Java,
        Javascript,
        JavaServer_Faces,
        JCL,
        JSON,
        JSP,
        Kermit,
        Korn_Shell,
        Kotlin,
        LESS,
        lex,
        Lisp,
        Lisp_Julia,
        Lisp_OpenCL,
        LiveLink_OScript,
        Lua,
        m4,
        make,
        MATLAB,
        Maven,
        Modula3,
        MSBuild_script,
        MUMPS,
        Mustache,
        MXML,
        NAnt_script,
        NASTRAN_DMAP,
        Objective_C,
        Objective_C__,
        OCaml,
        Oracle_Forms,
        Oracle_Reports,
        Pascal,
        Pascal_Puppet,
        Patran_Command_Language,
        Perl,
        Perl_Prolog,
        PHP,
        PHP_Pascal,
        Pig_Latin,
        PL_I,
        PowerShell,
        Prolog,
        Protocol_Buffers,
        PureScript,
        Python,
        QML,
        R,
        Racket,
        Razor,
        Rexx,
        RobotFramework,
        Ruby,
        Ruby_HTML,
        Rust,
        SAS,
        SASS,
        Scala,
        sed,
        SKILL,
        SKILL__,
        Smarty,
        Softbridge_Basic,
        SQL,
        SQL_Data,
        SQL_Stored_Procedure,
        Standard_ML,
        Swift,
        Tcl_Tk,
        Teamcenter_met,
        Teamcenter_mth,
        Titanium_Style_Sheet,
        TypeScript,
        Unity_Prefab,
        Vala,
        Vala_Header,
        Velocity_Template_Language,
        Verilog_SystemVerilog,
        VHDL,
        vim_script,
        Visual_Basic,
        Visual_Fox_Pro,
        Visualforce_Component,
        Visualforce_Page,
        Windows_Message_File,
        Windows_Module_Definition,
        Windows_Resource_File,
        WiX_include,
        WiX_source,
        WiX_string_localization,
        XAML,
        xBase,
        xBase_Header,
        XML,
        XQuery,
        XSD,
        XSLT,
        yacc,
        YAML
    }

    public static class ProjectAspects
    {
        static ProjectAspects()
        {
            Init();
        }

        private static Dictionary<Languages, string> Map = new Dictionary<Languages, string>();
        private static Dictionary<Languages, string[]> ExtensionsMapping = new Dictionary<Languages, string[]>();

        private static void Init()
        {
            if (Map.Count > 0)
                return;

            int index = 0;
            foreach (var lang in Languages)
            {
                var parsedName = (Languages)Enum.Parse(typeof(Languages), SanitizeName(lang));

                Map.Add(parsedName, lang);
                ExtensionsMapping.Add(parsedName, Extensions[index]);

                ++index;
            }
        }

        private static string SanitizeName(string name)
        {
            string newName = string.Empty;

            foreach (var @char in name)
            {
                char newChar = default;
                if (!char.IsLetterOrDigit(@char))
                    newChar = '_';

                newName += newChar != default ? newChar : @char;
            }

            return newName;
        }

        public static Languages? GetLang(string value)
        {
            return Map?.FirstOrDefault(kv => kv.Value == value).Key;
        }

        public static bool HasKey(string value)
        {
            return Map?.ContainsValue(value) == true;
        }

        public static bool ContainsLine(string line)
        {
            return Languages.Any(line.StartsWith);
            //return Languages.Any(line.Contains);
        }

        public static string[] GetExtensions(Languages lang)
        {
            string[] exts;

            if (lang == default)
                exts = ExtensionsMapping.Values.SelectMany(e => e).ToArray();

            exts = ExtensionsMapping[lang]
                .ToArray();

            return exts
                .Select(ext => $"*.{ext}")
                .ToArray();
        }

        private static string[] Languages = {
            "ABAP",
            "ActionScript",
            "Ada",
            "ADSO/IDSM",
            "AMPLE",
            "Ant",
            "Apex Trigger",
            "Arduino Sketch",
            "ASP",
            "ASP.Net",
            "Assembly",
            "AutoHotkey",
            "awk",
            "Bourne Again Shell",
            "Bourne Shell",
            "C",
            "C Shell",
            "C#",
            "C++",
            "C/C++ Header",
            "CCS",
            "Clojure",
            "ClojureScript",
            "CMake",
            "COBOL",
            "CoffeeScript",
            "ColdFusion",
            "ColdFusion CFScript",
            "CSS",
            "CUDA",
            "Cython",
            "D/dtrace",
            "DAL",
            "Dart",
            "diff",
            "DITA",
            "DOS Batch",
            "DTD",
            "ECPP",
            "Elixir",
            "ERB",
            "Erlang",
            "Expect",
            "F#",
            "Focus",
            "Fortran 77",
            "Fortran 90",
            "Fortran 95",
            "Go",
            "Grails",
            "Groovy",
            "Haml",
            "Handlebars",
            "Harbour",
            "Haskell",
            "HLSL",
            "HTML",
            "IDL",
            "IDL/Qt Project/Prolog",
            "InstallShield",
            "Java",
            "Javascript",
            "JavaServer Faces",
            "JCL",
            "JSON",
            "JSP",
            "Kermit",
            "Korn Shell",
            "Kotlin",
            "LESS",
            "lex",
            "Lisp",
            "Lisp/Julia",
            "Lisp/OpenCL",
            "LiveLink OScript",
            "Lua",
            "m4",
            "make",
            "MATLAB",
            "Maven",
            "Modula3",
            "MSBuild script",
            "MUMPS",
            "Mustache",
            "MXML",
            "NAnt script",
            "NASTRAN DMAP",
            "Objective C",
            "Objective C++",
            "OCaml",
            "Oracle Forms",
            "Oracle Reports",
            "Pascal",
            "Pascal/Puppet",
            "Patran Command Language",
            "Perl",
            "Perl/Prolog",
            "PHP",
            "PHP/Pascal",
            "Pig Latin",
            "PL/I",
            "PowerShell",
            "Prolog",
            "Protocol Buffers",
            "PureScript",
            "Python",
            "QML",
            "R",
            "Racket",
            "Razor",
            "Rexx",
            "RobotFramework",
            "Ruby",
            "Ruby HTML",
            "Rust",
            "SAS",
            "SASS",
            "Scala",
            "sed",
            "SKILL",
            "SKILL++",
            "Smarty",
            "Softbridge Basic",
            "SQL",
            "SQL Data",
            "SQL Stored Procedure",
            "Standard ML",
            "Swift",
            "Tcl/Tk",
            "Teamcenter met",
            "Teamcenter mth",
            "Titanium Style Sheet",
            "TypeScript",
            "Unity-Prefab",
            "Vala",
            "Vala Header",
            "Velocity Template Language",
            "Verilog-SystemVerilog",
            "VHDL",
            "vim script",
            "Visual Basic",
            "Visual Fox Pro",
            "Visualforce Component",
            "Visualforce Page",
            "Windows Message File",
            "Windows Module Definition",
            "Windows Resource File",
            "WiX include",
            "WiX source",
            "WiX string localization",
            "XAML",
            "xBase",
            "xBase Header",
            "XML",
            "XQuery",
            "XSD",
            "XSLT",
            "yacc",
            "YAML"
        };

        private static string[][] Extensions =
        {
            new[] {"abap"},
            new[] {"as"},
            new[] {"ada", "adb", "ads", "pad"},
            new[] {"adso"},
            new[] {"ample", "dofile", "startup"},
            new[] {"build.xml"},
            new[] {"trigger"},
            new[] {"ino", "pde"},
            new[] {"asa", "asp"},
            new[] {"asax", "ascx", "asmx", "aspx", "config", "master", "sitemap", "webinfo"},
            new[] {"asm", "s", "S"},
            new[] {"ahk"},
            new[] {"awk"},
            new[] {"bash"},
            new[] {"sh"},
            new[] {"c", "ec", "pgc"},
            new[] {"csh", "tcsh"},
            new[] {"cs"},
            new[] {"C", "c++", "cc", "cpp", "cxx", "pcc"},
            new[] {"h", "H", "hh", "hpp"},
            new[] {"ccs"},
            new[] {"clj"},
            new[] {"cljs"},
            new[] {"cmake", "CMakeLists.txt"},
            new[] {"cbl", "CBL", "cob", "COB"},
            new[] {"coffee"},
            new[] {"cfm"},
            new[] {"cfc"},
            new[] {"css"},
            new[] {"cu"},
            new[] {"pyx"},
            new[] {"d"},
            new[] {"da"},
            new[] {"dart"},
            new[] {"diff"},
            new[] {"dita"},
            new[] {"bat", "BAT", "btm", "BTM", "cmd", "CMD"},
            new[] {"dtd"},
            new[] {"ecpp"},
            new[] {"ex", "exs"},
            new[] {"ERB", "erb"},
            new[] {"erl", "hrl"},
            new[] {"exp"},
            new[] {"fs", "fsi"},
            new[] {"focexec"},
            new[] {"f", "F", "f77", "F77", "for", "FOR", "FTN", "ftn", "pfo"},
            new[] {"f90", "F90"},
            new[] {"f95", "F95"},
            new[] {"go"},
            new[] {"gsp"},
            new[] {"gant", "gradle", "groovy"},
            new[] {"haml"},
            new[] {"handlebars", "hbs"},
            new[] {"hb"},
            new[] {"hs", "lhs"},
            new[] {"cg", "cginc", "shader"},
            new[] {"htm", "html"},
            new[] {"idl"},
            new[] {"pro"},
            new[] {"ism"},
            new[] {"java"},
            new[] {"js"},
            new[] {"jsf", "xhtml"},
            new[] {"jcl"},
            new[] {"json"},
            new[] {"jsp", "jspf"},
            new[] {"ksc"},
            new[] {"ksh"},
            new[] {"kt"},
            new[] {"less"},
            new[] {"l"},
            new[] {"el", "lisp", "lsp", "sc"},
            new[] {"jl"},
            new[] {"cl"},
            new[] {"oscript"},
            new[] {"lua"},
            new[] {"ac", "m4"},
            new[] {"am", "gnumakefile", "Gnumakefile", "makefile", "Makefile"},
            new[] {"m"},
            new[] {"pom", "pom.xml"},
            new[] {"i3", "ig", "m3", "mg"},
            new[] {"csproj", "vbproj", "vcproj", "wdproj", "wixproj"},
            new[] {"mps", "m"},
            new[] {"mustache"},
            new[] {"mxml"},
            new[] {"build"},
            new[] {"dmap"},
            new[] {"m"},
            new[] {"mm"},
            new[] {"ml", "mli", "mll", "mly"},
            new[] {"fmt"},
            new[] {"rex"},
            new[] {"dpr", "p", "pas"},
            new[] {"pp"},
            new[] {"pcl", "ses"},
            new[] {"perl", "plh", "plx", "pm"},
            new[] {"PL", "pl"},
            new[] {"php", "php3", "php4", "php5"},
            new[] {"inc"},
            new[] {"pig"},
            new[] {"pl1"},
            new[] {"ps1"},
            new[] {"P"},
            new[] {"proto"},
            new[] {"purs"},
            new[] {"py"},
            new[] {"qml"},
            new[] {"R"},
            new[] {"rkt", "rktl", "sch", "scm", "scrbl", "ss"},
            new[] {"cshtml"},
            new[] {"rexx"},
            new[] {"robot", "tsv"},
            new[] {"rake", "rb"},
            new[] {"rhtml"},
            new[] {"rs"},
            new[] {"sas"},
            new[] {"sass", "scss"},
            new[] {"scala"},
            new[] {"sed"},
            new[] {"il"},
            new[] {"ils"},
            new[] {"smarty", "tpl"},
            new[] {"sbl", "SBL"},
            new[] {"psql", "sql", "SQL"},
            new[] {"data.sql"},
            new[] {"spc.sql", "spoc.sql", "sproc.sql", "udf.sql"},
            new[] {"fun", "sig", "sml"},
            new[] {"swift"},
            new[] {"itk", "tcl", "tk"},
            new[] {"met"},
            new[] {"mth"},
            new[] {"tss"},
            new[] {"ts"},
            new[] {"mat", "prefab"},
            new[] {"vala"},
            new[] {"vapi"},
            new[] {"vm"},
            new[] {"sv", "svh", "v"},
            new[] {"VHD", "vhd", "vhdl", "VHDL"},
            new[] {"vim"},
            new[] {"bas", "cls", "ctl", "dsr", "frm", "VB", "vb", "VBA", "vba", "vbs", "VBS"},
            new[] {"sca", "SCA"},
            new[] {"component"},
            new[] {"page"},
            new[] {"mc"},
            new[] {"def"},
            new[] {"rc", "rc2"},
            new[] {"wxi"},
            new[] {"wxs"},
            new[] {"wxl"},
            new[] {"xaml"},
            new[] {"prg"},
            new[] {"ch"},
            new[] {"XML", "xml"},
            new[] {"xq", "xquery"},
            new[] {"xsd", "XSD"},
            new[] {"xsl", "XSL", "xslt", "XSLT"},
            new[] {"y"},
            new[] {"yaml", "yml"}
        };

        //private static string[][] aaa =
        //{
        //    new[] {"aaa", "nnnn"},
        //    new[]{"aaa"}
        //};
    }
}